---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';
import readingTime from 'reading-time';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.flatMap((post) => {
    const year = post.data.pubDate.getFullYear();
    const paths = [];

    // 新形式: /blog/YYYY/slug (2023年以降)
    if (year >= 2023) {
      paths.push({
        params: { segments: `${year}/${post.id}` },
        props: post,
      });
    }

    // 旧形式維持: /blog/slug (既存記事用)
    paths.push({
      params: { segments: post.id },
      props: post,
    });

    return paths;
  });
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);

// Calculate reading time
const stats = readingTime(post.body);
const readingTimeMinutes = Math.ceil(stats.minutes);
---

<BlogPost {...post.data} readingTime={readingTimeMinutes}>
  <Content />
</BlogPost>
