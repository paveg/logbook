---
import type { RelatedPost } from '../utils/relatedPosts.ts';
import FormattedDate from './FormattedDate.astro';

export interface Props {
  posts: RelatedPost[];
}

const { posts } = Astro.props;

if (posts.length === 0) {
  return;
}
---

<section class="related-posts">
  <h2>関連記事</h2>
  <div class="posts-grid">
    {
      posts.map((post) => (
        <article class="post-card">
          <a href={`/blog/${post.slug}/`} class="post-link">
            {post.data.heroImage && (
              <div class="post-image">
                <img src={post.data.heroImage} alt="" loading="lazy" width="300" height="200" />
              </div>
            )}
            <div class="post-content">
              <h3 class="post-title">{post.data.title}</h3>
              <p class="post-description">{post.data.description}</p>
              <div class="post-meta">
                <FormattedDate date={post.data.pubDate} />
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="post-tags">
                    {post.data.tags.slice(0, 2).map((tag) => (
                      <span class="tag">{tag}</span>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </a>
        </article>
      ))
    }
  </div>
</section>

<style>
  .related-posts {
    margin-top: var(--space-3xl);
    padding-top: var(--space-xl);
    border-top: 1px solid var(--color-border);
  }

  .related-posts h2 {
    margin-bottom: var(--space-lg);
    font-size: var(--font-size-xl);
    font-weight: 500;
    color: var(--color-text);
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--space-lg);
  }

  .post-card {
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-md);
    overflow: hidden;
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
    background: var(--color-bg);
  }

  .post-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .post-link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .post-link:hover {
    color: inherit;
  }

  .post-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s ease;
  }

  .post-card:hover .post-image img {
    transform: scale(1.05);
  }

  .post-content {
    padding: var(--space-md);
  }

  .post-title {
    margin-bottom: var(--space-sm);
    font-size: var(--font-size-md);
    font-weight: 500;
    line-height: var(--line-height-snug);
    color: var(--color-text);
  }

  .post-description {
    margin-bottom: var(--space-md);
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
    line-height: var(--line-height-relaxed);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-sm);
    font-size: var(--font-size-xs);
    color: var(--color-text-muted);
  }

  .post-tags {
    display: flex;
    gap: var(--space-xs);
  }

  .tag {
    padding: 2px 6px;
    background: var(--color-accent-subtle);
    color: var(--color-accent);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-xs);
    font-weight: 500;
  }

  @media (max-width: 720px) {
    .posts-grid {
      grid-template-columns: 1fr;
      gap: var(--space-md);
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-xs);
    }

    .post-tags {
      align-self: flex-end;
    }
  }
</style>
