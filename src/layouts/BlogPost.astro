---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BlogMetadata from '../components/BlogMetadata.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import ShareButtons from '../components/ShareButtons.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'] & { readingTime?: number; slug?: string };

const { title, description, pubDate, updatedDate, heroImage, keywords, author, tags, readingTime } =
  Astro.props;

// Format dates for structured data
const publishedTime = pubDate.toISOString();
const modifiedTime = updatedDate?.toISOString() || publishedTime;

// Create keywords string from tags and custom keywords
const articleKeywords = [
  ...(tags || []),
  ...(keywords ? keywords.split(',').map((k) => k.trim()) : []),
].join(', ');

// Create the full URL for this article
const articleUrl = new URL(Astro.url.pathname, Astro.site).href;
---

<html lang="ja">
  <head>
    <BaseHead
      title={title}
      description={description}
      image={heroImage}
      article={true}
      publishedTime={publishedTime}
      modifiedTime={modifiedTime}
      keywords={articleKeywords}
      author={author}
    />
    <style>
      .hero-image {
        width: 100%;
        margin-bottom: var(--space-xl);
        text-align: center;
      }
      .hero-image img {
        display: block;
        width: 100%;
        height: auto;
        margin: 0 auto;
        border-radius: var(--border-radius-md);
        box-shadow: none;
      }
      .prose {
        width: 100%;
        margin: 0;
        padding: 0;
        color: var(--color-text);
      }
      .title {
        margin-bottom: var(--space-xl);
        padding: 0;
        text-align: left;
      }
      .title h1 {
        margin: 0 0 var(--space-md) 0;
        font-size: var(--font-size-3xl);
        font-weight: 300;
        letter-spacing: -0.02em;
        line-height: var(--line-height-tight);
      }
      hr {
        display: none;
      }
      @media (max-width: 720px) {
        .title h1 {
          font-size: var(--font-size-2xl);
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <div class="container">
        <Breadcrumb items={[{ label: 'HOME', href: '/' }, { label: title }]} />
        <article>
          <div class="hero-image">
            {
              heroImage &&
                (heroImage.startsWith('http') ? (
                  <img
                    width={1020}
                    height={510}
                    src={heroImage}
                    alt=""
                    loading="eager"
                    decoding="async"
                  />
                ) : (
                  <Image
                    src={heroImage}
                    width={1020}
                    height={510}
                    alt=""
                    loading="eager"
                    format="webp"
                    quality={85}
                  />
                ))
            }
          </div>
          <div class="prose">
            <div class="title">
              <h1>{title}</h1>
              <BlogMetadata pubDate={pubDate} readingTime={readingTime} updatedDate={updatedDate} />
              <hr />
            </div>
            <slot />
            <ShareButtons title={title} url={articleUrl} />
          </div>
        </article>
      </div>
    </main>
    <Footer />
  </body>
</html>
